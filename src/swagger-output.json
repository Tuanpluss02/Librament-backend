{
  "openapi": "3.1.0",
  "info": {
    "title": "API Documentation",
    "description": "Description of your API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "API for authentication"
    },
    {
      "name": "Books",
      "description": "API for managing books"
    },
    {
      "name": "Records",
      "description": "API for managing records"
    },
    {
      "name": "Borrowers",
      "description": "API for managing borrowers"
    },
    {
      "name": "Publishers",
      "description": "API for managing publishers"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Endpoint to login.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register",
        "description": "Endpoint to register.",
        "responses": {
          "default": {
            "description": ""
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        }
      }
    },
    "/books/get": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book",
        "description": "Endpoint to get book.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "book_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/books/get-all": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "Endpoint to get all books.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/books/new": {
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add new book",
        "description": "Endpoint to add new book.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/book"
              }
            }
          }
        }
      }
    },
    "/books/update/{book_id}": {
      "patch": {
        "tags": [
          "Books"
        ],
        "summary": "Update book",
        "description": "Endpoint to update book.",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/book"
              }
            }
          }
        }
      }
    },
    "/books/delete/{book_id}": {
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete book",
        "description": "Endpoint to delete book.",
        "parameters": [
          {
            "name": "book_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/borrows/get-all": {
      "get": {
        "tags": [
          "Borrowers"
        ],
        "summary": "Get all borrowers",
        "description": "Endpoint to get all borrowers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/borrows/get": {
      "get": {
        "tags": [
          "Borrowers"
        ],
        "summary": "Get borrower",
        "description": "Endpoint to get borrower.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "borrower_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/borrows/add": {
      "post": {
        "tags": [
          "Borrowers"
        ],
        "summary": "Add new borrower",
        "description": "Endpoint to add new borrower.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/borrower"
              }
            }
          }
        }
      }
    },
    "/borrows/update/{borrower_id}": {
      "patch": {
        "tags": [
          "Borrowers"
        ],
        "summary": "Update borrower",
        "description": "Endpoint to update borrower.",
        "parameters": [
          {
            "name": "borrower_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/borrower"
              }
            }
          }
        }
      }
    },
    "/borrows/delete/{borrower_id}": {
      "delete": {
        "tags": [
          "Borrowers"
        ],
        "summary": "Add new borrower",
        "description": "Endpoint to add new borrower.",
        "parameters": [
          {
            "name": "borrower_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/records/get-all": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "Get all records",
        "description": "Endpoint to get all records.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/records/get": {
      "get": {
        "tags": [
          "Records"
        ],
        "summary": "Get record",
        "description": "Endpoint to get record.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/records/add": {
      "post": {
        "tags": [
          "Records"
        ],
        "summary": "Add new record",
        "description": "Endpoint to add new record.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/record"
              }
            }
          }
        }
      }
    },
    "/records/update/{record_id}": {
      "patch": {
        "tags": [
          "Records"
        ],
        "summary": "Add new record",
        "description": "Endpoint to add new record.",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/record"
              }
            }
          }
        }
      }
    },
    "/records/delete/{record_id}": {
      "delete": {
        "tags": [
          "Records"
        ],
        "summary": "Delete record",
        "description": "Endpoint to delete record.",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/records/return/{record_id}": {
      "patch": {
        "tags": [
          "Records"
        ],
        "summary": "Return book",
        "description": "Endpoint to return book.",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/publishers/get-all": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get all publishers",
        "description": "Endpoint to get all publishers.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/publishers/get/": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get publisher by id",
        "description": "Endpoint to get publisher by id.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisher_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/publishers/{publisher_id}/get-books": {
      "get": {
        "tags": [
          "Publishers"
        ],
        "summary": "Get all books of a publisher",
        "description": "Endpoint to get all books of a publisher.",
        "parameters": [
          {
            "name": "publisher_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/publishers/add": {
      "post": {
        "tags": [
          "Publishers"
        ],
        "summary": "Add new publisher",
        "description": "Endpoint to add new publisher.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/publisher"
              }
            }
          }
        }
      }
    },
    "/publishers/update/{borrower_id}": {
      "patch": {
        "tags": [
          "Publishers"
        ],
        "summary": "Update publisher",
        "description": "Endpoint to update publisher.",
        "parameters": [
          {
            "name": "borrower_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/publisher"
              }
            }
          }
        }
      }
    },
    "/publishers/delete/{borrower_id}": {
      "delete": {
        "tags": [
          "Publishers"
        ],
        "summary": "Delete publisher",
        "description": "Endpoint to delete publisher.",
        "parameters": [
          {
            "name": "borrower_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "register": {
        "type": "object",
        "properties": {
          "employee_name": {
            "type": "string",
            "example": "Nguyen Van A"
          },
          "password": {
            "type": "string",
            "example": "Abc123!@#"
          },
          "position": {
            "type": "string",
            "example": "admin"
          }
        },
        "required": [
          "employee_name",
          "password",
          "position"
        ]
      },
      "login": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "example": "EMP0001"
          },
          "password": {
            "type": "string",
            "example": "Abc123!@#"
          }
        },
        "required": [
          "employee_id",
          "password"
        ]
      },
      "borrower": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string",
            "example": "Borrower name"
          },
          "address": {
            "type": "string",
            "example": "Borrower address"
          },
          "phone_number": {
            "type": "string",
            "example": "Borrower phone number"
          }
        },
        "required": [
          "full_name",
          "address",
          "phone_number"
        ]
      },
      "book": {
        "type": "object",
        "properties": {
          "publisher_id": {
            "type": "string",
            "example": "PUB0001"
          },
          "title": {
            "type": "string",
            "example": "Book title"
          },
          "author": {
            "type": "string",
            "example": "Book author"
          },
          "genre": {
            "type": "string",
            "example": "Book genre"
          },
          "publication_year": {
            "type": "number",
            "example": 2021
          },
          "isbn": {
            "type": "string",
            "example": "Book ISBN"
          },
          "quantity": {
            "type": "number",
            "example": 10
          }
        },
        "required": [
          "publisher_id",
          "title",
          "author",
          "genre",
          "publication_year",
          "isbn",
          "quantity"
        ]
      },
      "record": {
        "type": "object",
        "properties": {
          "book_id": {
            "type": "string",
            "example": "BOOK0001"
          },
          "borrower_id": {
            "type": "string",
            "example": "BOR0001"
          },
          "borrow_date": {
            "type": "string",
            "example": "20/10/2023"
          },
          "return_date": {
            "type": "string",
            "example": "20/11/2023"
          },
          "status": {
            "type": "string",
            "example": "borrowed"
          }
        },
        "required": [
          "book_id",
          "borrower_id",
          "borrow_date",
          "return_date",
          "status"
        ]
      },
      "publisher": {
        "type": "object",
        "properties": {
          "publisher_name": {
            "type": "string",
            "example": "Publisher name"
          },
          "address": {
            "type": "string",
            "example": "Publisher address"
          },
          "phone_number": {
            "type": "string",
            "example": "Publisher phone number"
          }
        },
        "required": [
          "publisher_name",
          "address",
          "phone_number"
        ]
      }
    }
  }
}